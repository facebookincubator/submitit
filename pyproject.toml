[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "submitit"
readme = "README.md"
authors = [{name = "Facebook AI Research"}]
requires-python = ">=3.8"
dynamic = ["version", "description"]

dependencies = [
  "cloudpickle>=1.2.1",
  "typing_extensions>=3.7.4.2"
]
# zip_safe = false
classifiers=[
    "License :: OSI Approved :: MIT License",
    "Topic :: System :: Distributed Computing",
    "Development Status :: 5 - Production/Stable",
]

[project.urls]
  Source = "https://github.com/facebookincubator/submitit"
  Tracker = "https://github.com/facebookincubator/submitit/issues"

[project.optional-dependencies]
    dev = [
        # Test
        "pytest>=7.4.2",
        "pytest-asyncio>=0.15.0",
        "pytest-cov>=4.1.0",
        "coverage[toml]>=5.1",
        # Format
        "black==23.3.0",
        "isort==5.11.5",
        "pre-commit>=1.15.2",
        # Linters
        "mypy>=1.4.1",
        "types-pkg_resources>=0.1.2",
        "pylint>=3.0.0",
        # Release
        "flit>=3.5.1"
    ]

[tool.black]
line-length = 110
exclude = '''
/(
  | \.git
  | \.mypy_cache
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 110
skip_gitignore = true


[tool.pylint]
  [tool.pylint."MESSAGES CONTROL"]
  # disabled messages
  # * no-member has a lot of false positive, mypy does it better
  disable = """
      broad-except,
      fixme,
      invalid-name,
      logging-fstring-interpolation,
      missing-docstring,
      no-else-return,
      no-member,
      protected-access,
      too-few-public-methods,
      useless-import-alias,
      unspecified-encoding
  """
  [tool.pylint.DESIGN]
  max-args = 6

  [tool.pylint.FORMAT]
  max-line-length = "140"

  [tool.pylint.SIMILARITIES]
  ignore-imports = "yes"


[tool.coverage]
  [tool.coverage.run]
    omit = ["*/test_*.py", "/tmp/pytest*/*"]
    data_file = "test_results/coverage/coverage.bin"

  [tool.coverage.html]
    directory = "test_results/coverage_html"

  [tool.coverage.xml]
    output = "test_results/coverage/coverage.xml"

  [tool.coverage.report]
    fail_under = 90
    exclude_lines = [
      "pragma: no cover", # Re-enable the standard pragma
      "raise NotImplementedError",
      "^\\s+\\.\\.\\.$",
    ]

[tool.mypy]
  show_error_codes = true

[[tool.mypy.overrides]]
  module = ['cloudpickle', 'ipdb', 'pytest', 'setuptools']
  ignore_missing_imports = true
